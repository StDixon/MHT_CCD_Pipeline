#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov  5 10:31:38 2018

@author: sdixon
"""

import os, shutil
import directories as dir
import collection as col
from ccdproc import ImageFileCollection
from ccdproc import CCDData
import numpy as np
import ccdproc
from astropy import units as u

source_dir = 'samples'
bias_dir = 'working/calibration/bias'
dark_dir = 'working/calibration/dark'
flat_dir = 'working/calibration/flat'
master_dir = 'working/calibration/masters'
science_dir = 'working/science'
output_dir = 'working/output'

keywords = ("IMAGETYP", "FILTER", "OBJECT", "EXPOSURE", "EXPTIME", "CCDTEMP")
keywords = ("IMAGETYP", "FILTER", "OBJECT", "EXPOSURE")

directoryList = (bias_dir,dark_dir,flat_dir,science_dir,master_dir,output_dir)

print('Create Directories')
dir.createWorkingDirectories(directoryList)

ic = ImageFileCollection(source_dir, keywords)
table = ic.summary
imagetypes = np.unique(table['IMAGETYP'].data).tolist()

image_bias = 'Bias Frame'
image_dark = 'Dark Frame'
image_flat = 'Flat Field'
image_science = 'Light Frame'

bias_keys = {'IMAGETYP': image_bias}
dark_keys =  {'IMAGETYP': image_dark}
flat_keys =  {'IMAGETYP': image_flat}
science_keys =  {'IMAGETYP': image_science}

imageList = (image_bias, image_dark, image_flat, image_science)

print('Copy Images')
#col.copyImageTypes(ic,directoryList,imageList)

bias_names = col.fileNames(ic,bias_keys)
bias_names_full = col.fileNames(ic,bias_keys,include_path=True)
dark_names = col.fileNames(ic,dark_keys)
flat_names = col.fileNames(ic,flat_keys)
science_names = col.fileNames(ic,science_keys)

print('Create Collections')
bias_ic = ImageFileCollection(bias_dir, keywords)
bias_table = bias_ic.summary

flat_ic = ImageFileCollection(flat_dir, keywords)
flat_table = flat_ic.summary
print(repr(flat_table))

flat_filters = np.unique(flat_table['FILTER'].data).tolist()
flat_exposures = np.unique(flat_table['EXPOSURE'].data).tolist()

print('Flat Exposures')
print(repr(flat_exposures))

dark_ic = ImageFileCollection(dark_dir, keywords)
dark_table = dark_ic.summary

dark_exposures = np.unique(dark_table['EXPOSURE'].data).tolist()

print('Dark Exposures')
print(repr(dark_exposures))
 
science_ic = ImageFileCollection(science_dir, keywords)
science_table = science_ic.summary

science_filters = np.unique(science_table['FILTER'].data).tolist()
science_objects = np.unique(science_table['OBJECT'].data).tolist()
science_exposures = np.unique(science_table['EXPOSURE'].data).tolist()

print('Science Exposures')
print(repr(science_exposures))
print(repr(science_table))

print('Copy Filters')
col.copyFilters(flat_ic,flat_dir,flat_filters)
col.copyFilters(science_ic,science_dir,science_filters)

print('Copy Exposures')
col.copyExposures(dark_ic,dark_dir,dark_exposures)

print('Create Master Bias')
#col.createMasters(bias_ic,master_dir,'master_bias.fit',image_bias,'')

print('Create Master Darks')
#col.createMasters(dark_ic,master_dir,'master_dark.fit',image_dark,'')

print('Create Master Flats')
for filterType in flat_filters:
    print('Create Master Flat ' + filterType)
    masterFile = 'master_flat_' + filterType + '.fit'
    #col.createMasters(flat_ic,master_dir,masterFile,image_flat,filterType)

print('Bias Removal')
print('Bias Removal from Dark')
col.removeBias(master_dir,'master_bias.fit','master_dark.fit','master_dark_br.fit')

print('Bias Removal from Flats')
for filterType in flat_filters:
    print('Bias Removal from Flat ' + filterType)
    masterFile = 'master_flat_' + filterType + '.fit'
    masterFilebr = 'master_flat_' + filterType + '_br.fit'
    col.removeBias(master_dir,'master_bias.fit',masterFile,masterFilebr)







